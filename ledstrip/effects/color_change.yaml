addressable_lambda:
  name: "Color change"
  lambda: |-
    static ESPColor *xLedTargetColor=NULL;
    static ESPColor *xLedCurrColor=NULL;
    if(xLedTargetColor==NULL) {
      xLedTargetColor=new ESPColor[it.size()];
      xLedCurrColor=new ESPColor[it.size()];
      for(int i=0; i < it.size(); i++) {
        xLedCurrColor[i]=it[i].get();
        xLedTargetColor[i]=ESPColor::random_color();
        // ESPColor target= xLedTargetColor[i];
        // ESP_LOGD(TAG, "init [%d]=> %02x %02x %02x", i, target.red, target.green, target.blue);
      }
    }
    for (int i = 0; i <  it.size(); i++) {
      ESPColor &c=xLedCurrColor[i];
      ESPColor org=c;
      ESPColor target= xLedTargetColor[i];
      if(c.red == target.red && c.green == target.green && c.blue == target.blue) {
        xLedTargetColor[i]=ESPColor::random_color();
        // target= xLedTargetColor[i];
        // ESP_LOGD(TAG, "init [%d]=> %02x %02x %02x", i, target.red, target.green, target.blue);
      }
      if(c.red < target.red) {
        c.red++;
      } else if(c.red > target.red) {
        c.red--;
      }
      if(c.green < target.green) {
        c.green++;
      } else if(c.green > target.green) {
        c.green--;
      }
      if(c.blue < target.blue) {
        c.blue++;
      } else if(c.blue > target.blue) {
        c.blue--;
      }
      // ESP_LOGD(TAG, "change [%d]=> %02x %02x %02x  => %02x %02x %02x", i, c.red, c.green, c.blue, target.red, target.green, target.blue);
      it[i] = c;
      // if(i==0) ESP_LOGD(TAG, "change [%d]=> %02x %02x %02x  => %02x %02x %02x", i, org.red, org.green, org.blue,  it[i].get_red(), it[i].get_green(), it[i].get_blue());
    }
